# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]

jobs:
  ci:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x, 15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
          # Docker Hub PostgreSQL image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            # Maps tcp port 5432 on service container to the host
            - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm run build
    - run: npm run typeorm migration:run
    - run: npm run seed:run
    - run: npm test
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: robbyawaldi/example-ci-cd:latest
    -   name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-folder
          path: |
            dist
            package.json
    - 
        name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: 103.173.75.39
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "dist, package.json"
          target: "~/test-app"
